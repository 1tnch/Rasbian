from distutils.core import setup
from Cython.Build import cythonize
import os
import os.path
import sys

"""
Getting the files(.py) in directory including all sub directories

NOTE: Execute this in terminal to have .so extensions in
this directory /home/pi/Desktop/Build

python setup.py build_ext -b /home/pi/Desktop/Build
"""
__author__ = "Rhian Dave Sedon"


# Collection of paths.
dirpaths=[]

# Build directory.
build_dir=None

# Get the build directory string (after -b parameter).
if len(sys.argv)>0:
    for i in range(len(sys.argv)):
        if sys.argv[i]=='-b':
            build_dir=sys.argv[i+1]
print 'Build directory=', build_dir

# Touch the file. Only used for creating empty file in this case.
def touch(path):
    with open(path, 'a'):
        os.utime(path, None)

# Scan the whole folders and subfolders for the .py files to be
# encrypted.
for dirpath, dirnames, filenames in os.walk("."):
    
    for filename in [f for f in filenames if f.endswith(".py")]:
        # setup.py is excluded
        if filename == "setup.py":  
            continue
        # Storing all .py files in cython_file.
        cython_file=os.path.join(dirpath, filename)
        # It will cythonize all .py files.
        setup(ext_modules = cythonize ((cython_file)))
        
        # Collect the directory paths.
        dirpaths.append(dirpath)

# Apply packaging structure to the builded files.
# For python, a package is declared with an empty '__init__.py' file.
for d in set(dirpaths):
    #print "=> ", d[1:]+'/__init__.py'
    touch(build_dir+d[1:]+'/__init__.py')